#trying to be more organised @_@


import pandas as pd
import os
import matplotlib.pyplot as plt
import numpy as np
from iminuit import Minuit
import glob
import statistics as stats
#%%
os.chdir(r'C:\Users\jingyi\OneDrive - Imperial College London\Desktop\year3-problem-solving')
#cwd=os.getcwd()
#%%  reading df
# specifying the psath to csv files
path = r"C:\Users\jingyi\OneDrive - Imperial College London\Desktop\year3-problem-solving"
  
# csv files in the path
files = glob.glob(path + "/*.csv")
  
# assign dataset names
list_of_names = ['acceptance_mc','total_dataset','signal','phimumu','pKmumu_piTok_kTop','pKmumu_piTop','k_pi_swap','jpsi_mu_pi_swap','jpsi_mu_k_swap',
                 'psi2S','jpsi']
 
# create empty list
df_list = []

# append datasets into the list
for i in range(len(list_of_names)):
    temp_df = pd.read_csv(path+"/"+list_of_names[i]+".csv")
    df_list.append(temp_df)
    
    
#%% functions
def plots(df,namelist,title):
"""
plots the mass and angular distributions of a dataset, superposed onthe original td distributions
"""
    for i in namelist:
        plt.hist(df[i],bins=1000,histtype=u'step')
        plt.title(i+'  number left  '+ str(df.shape[0])+title)
        plt.hist(td[i],bins=1000,histtype=u'step')
        plt.legend([i,'td'])
        plt.show()
anglemass=['B0_MM','costhetal','costhetak','q2','phi']
plots(td,anglemass,'td')
plots(td_filter30,anglemass,'td_filter30')
        
#%% examine distribution - initial
anglemass=['B0_MM','costhetal','costhetak','q2','phi']
plots(td,anglemass)
#%% prob
problist=['mu_minus_MC15TuneV1_ProbNNmu', 'mu_plus_MC15TuneV1_ProbNNmu',   'K_MC15TuneV1_ProbNNk'
      , 'Pi_MC15TuneV1_ProbNNp']
def prob(df,list,crit): 
    for i in list :
        df=df[(df[i]>crit)]
        
td_prob=prob(td,prob,0.95)

plots(td_prob,anglemass)   
#%% chi^2
chi_name=[ 'Pi_IPCHI2_OWNPV', 'B0_FDCHI2_OWNPV']
def filt(df,crit,list):  #dataframe, critical value, name of chi    
    df=df[(df.Kstar_MM>810)]
    df=df[(df.B0_IPCHI2_OWNPV>crit)]
    for i in list :
        df=df[(df[i]>crit)]
    #df1=df[(df.J_psi_MM <3090)|(df.J_psi_MM >)&(df.B0_MM<5230)]
    #|(df.J_psi_MM<3200))
    #|(df.B0_MM>5350))]
    
    #df = df.drop(index=df1.index)
    #df=df[(df.J_psi_MM <3690)|(df.J_psi_MM>3700)]
    #df=df[(df.q2 >1.1)|(df.q2<0.98)]
    #df=df[(df.q2 >15)|(df.q2<12.5)]
    #df=df[(df.q2 >10)|(df.q2<9)]    
    #df_filter2=df_filter1[df_filter1.mu_plus_MC15TuneV1_ProbNNmu>0.95]
    return df
        
        
